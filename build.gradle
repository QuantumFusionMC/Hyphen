plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group 'dev.quantumfusion'
version '0.3.0'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation libs.asm
    implementation libs.asm.util
    implementation libs.jetbrains.annotations
    
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly libs.junit.jupiter.engine
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = JavaVersion.VERSION_16
    targetCompatibility = JavaVersion.VERSION_16
    options.encoding = "UTF-8"
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        hyphen(MavenPublication) {
            from components.java

            pom {
                name = project.name
                description = "Serialize at the speed of light."
                url = "https://github.com/TeamQuantumFusion/Hyphen"

                licenses {
                    license {
                        name = "MIT License"
                        url = "http://www.opensource.org/licenses/mit-license.php"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/TeamQuantumFusion/Hyphen.git"
                    developerConnection = "scm:git:ssh://github.com:TeamQuantumFusion/Hyphen.git"
                    url = "http://github.com/TeamQuantumFusion/Hyphen/tree/rework-9"
                }
                developers {
                    developer {
                        id = "notalpha"
                        name = "Yan Chubikov"
                        email = "yan.gyunashyan@gmail.com"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    setRequired {
        gradle.taskGraph.allTasks.any { 
            it.equals(PublishToMavenRepository) 
        }
    }
    sign publishing.publications.hyphen
    sign configurations.archives
}